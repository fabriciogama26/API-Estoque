Tela: Dashboards
=================

1. Dashboard de Estoque
-----------------------
- Objetivo: mostrar panorama de entradas, saidas e alertas de estoque.
- Filtros: periodoInicio, periodoFim (inputs type="month") e termo (busca em memoria por nome/fabricante).
- Dados:
  * Modo remoto: GET /api/estoque?view=dashboard (c/ token). Backend usa EstoqueOperations.dashboard.
  * Modo local: localApi.estoque.dashboard combina seeds do localStorage via src/lib/estoque.js.
- Fluxo: filtros -> dataClient.estoque.dashboard -> charts EntradasSaidasChart, ValorMovimentadoChart, EstoquePorMaterialChart, EstoquePorCategoriaChart, MateriaisMaisUsadosChart.
- Regras: numero de materiais e valores tratados no backend/servico; filtro termo nao dispara novas chamadas.
- UI: loading nos botoes, mensagens neutras sem dados, cards destacados por tonalidades.

2. Dashboard de Acidentes
-------------------------
- Objetivo: acompanhar indicadores SST (acidentes, TF, TG, distribuicoes) alinhados com o estilo do dashboard de estoque.
- Filtros do formulario (src/components/FiltrosDashboard.jsx):
  * periodoInicio / periodoFim (type="month").
  * centroServico, tipo, lesao, parteLesionada, agente, cargo (selects dinamicos).
- Dados:
  * Modo remoto: view vw_indicadores_acidentes via Supabase (maybeSingle). Ainda aceita apenas ano/unidade; filtros adicionais sao aplicados apenas no modo local.
  * Modo local: localApi.acidentes.dashboard delega para src/lib/acidentesDashboard.js, que agrega acidentes em memoria, calcula TF/TG e expoe opcoes unicas para os selects.
- Fluxo: filtros -> dataClient.acidentes.dashboard -> componentes DashboardCards, ChartTendencia, ChartTipos, ChartPartesLesionadas, ChartCargos, ChartAgentes.
- Regras:
  * montarDashboardAcidentes normaliza datas, limita periodo, contabiliza contagens > 0 e monta helper periodo_label.
  * O retorno inclui options com listas unicas (centros, tipos, lesoes, partes, agentes, cargos).
  * Graficos ignoram valores <= 0 e exibem mensagem "Nenhum dado disponivel para os filtros escolhidos".
- UI: formulario usa classes form form--inline form--filters; os cards de grafico compartilham estilos de src/styles/charts.css (tamanhos especificos por classe dashboard-card--*).
- Modo local: filtros adicionais sao aplicados diretamente nos dados do localStorage; limpar filtros recarrega seeds.

Notas sobre estilos
-------------------
- src/styles/DashboardPage.css concentra layout/base dos formularios e dos "cartoes brancos".
- src/styles/charts.css concentra o grid, dimensoes padrao dos cards e variacoes para cada grafico (dashboard-card--tendencia, --tipos, --parte, --cargos, --agentes).

Documentacao relacionada
------------------------
- docs/data-mode-guide.txt: detalhes para reset do modo local e alternancia de ambientes.
- docs/Estoque.txt e docs/Acidentes.txt: regras especificas das telas operacionais.
