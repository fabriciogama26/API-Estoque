Tela: Dashboard
==================

Objetivo
-------
- Fornecer uma visão geral dos níveis de estoque de EPI após a migração para a pilha Vercel + Supabase.
- Métricas agregadas de superfície (entradas, saídas, alertas) e a classificação dos materiais mais movimentados para ação rápida.

Filtros
-------
- `periodoInicio` / `periodoFim` (entradas de mês, opcional): encaminhadas para `/api/estoque/dashboard` para restringir as consultas ao Supabase.
- `termo` (string, opcional): aplicada do lado do cliente a gráficos e classificações para busca instantânea sem chamadas HTTP extras.

Validações
-----------
- Validação HTML básica (`type="month"`, strings não vazias). Filtros vazios são permitidos.
- A rota sem servidor valida o período por meio do auxiliar compartilhado `parsePeriodo` antes de consultar o Supabase.

APIs
----
- `GET /api/estoque/dashboard?periodoInicio=&periodoFim=&termo=` (requer token Supabase Bearer). 
* Retorna `{ período, entradas, saidas, entradasDetalhadas[], saidasDetalhadas[], entradasHistoricas[], saidasHistoricas[], materiaisMaisMovimentados[], estoqueAtual }`. 
* Todos os dados vêm de tabelas Supabase (`materiais`, `entradas`, `saidas`, `pessoas`) através do helper serverless.

Fluxo de dados
---------
- Solicitação: filtros derivados do estado do componente.
- Uso de resposta: 
* Séries temporais preenchem `EntradasSaidasChart` e `ValorMovimentadoChart`. 
* `estoqueAtual.alertas` gera banners de alerta; `estoqueAtual.itens` alimenta listas de inventário. 
* Os rankings usam os arrays já agregados e não retornam ao Supabase.

Regras de Negócios
--------------
- O manipulador serverless `EstoqueOperations.dashboard` recalcula o estoque e os alertas em cada chamada usando auxiliares sem estado.
- Os totais de valor são computados no backend para manter os cálculos de moeda consistentes.
- O cliente aplica a filtragem `termo` apenas aos arrays já retornados.

Comportamento da IU
------------
- Os botões alternam `isLoading` e renderizam spinners textuais.
- As mensagens de erro vêm da carga útil da API (campo `error`).
- Se não houver dados disponíveis, a página exibe mensagens de feedback neutras em vez de gráficos.

Dependências
------------
- Requer sessão autenticada do Supabase (token adicionado automaticamente por `src/services/api.js`).
- Depende de componentes de gráfico compartilhados e autenticação de contexto para exibir o usuário.

Detalhes da Persistência
-------------------
- Leituras das tabelas do Supabase: `materiais`, `entradas`, `saidas`, `pessoas`.
- Nenhuma gravação ocorre nesta tela; todos os cálculos são somente leitura.