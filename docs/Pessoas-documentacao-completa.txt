Overview
========
- Comprehensive screen for managing collaborators (pessoas) including CRUD, filtering, and history timeline.
- Uses Supabase-backed serverless endpoints guarded by Supabase Auth tokens.

Key Operations
--------------
1. **Create**
   - Form collects `nome`, `matricula`, `local`, `cargo`.
   - Submits to `POST /api/pessoas`.
   - Backend validates required fields, enforces unique matricula, and stores audit info (`usuarioCadastro`, timestamps) in Supabase.

2. **Update**
   - Editing pulls the selected row into the form.
   - `PUT /api/pessoas/:id` updates the record and appends history entries (`historicoEdicao`) when values change.
   - History captures `usuarioResponsavel`, `dataEdicao`, and before/after values.

3. **History Modal**
   - `GET /api/pessoas/:id/historico-edicoes` returns the JSON array stored in Supabase.
   - Modal caches history per pessoa and displays a vertical timeline.

4. **Filtering and Sorting**
   - Client-side filtering by term, local, and cargo (`PessoasRules.filterPessoas`).
   - Sorting by name for stable table ordering.

Validations
-----------
- Front-end uses required inputs while backend revalidates.
- Duplicate matricula results in HTTP 409 from the serverless handler.

Supabase Tables
---------------
- `pessoas`: main entity including `historicoEdicao` JSONB column.
- Related tables (saidas, acidentes) reference `pessoas.id`.

UI Notes
--------
- Action column uses `PessoasActions` to trigger edit and history view.
- Error states are displayed within the form or modal based on the failing action.
- Manual refresh button reissues `GET /api/pessoas` for latest data.
