Ambiente de geracao do Termo de EPI
===================================

Visao geral
-----------
O projeto oferece dois modos para gerar o termo com Puppeteer:

* **Modo online (Supabase)** – usa o banco Supabase e exige autenticacao.
* **Modo local (seed)** – consome os dados do `localDataStore` e dispensa login para testes offline, mantendo a mesma saida do PDF.

Pontos principais
-----------------
* O backend (funcoes em `api/`) verifica a variavel `DATA_MODE`. Quando vale `local`, busca os dados seed e continua usando Puppeteer.
* A pagina `Termos > Termo de EPI` mostra um badge indicando o modo atual. O JSON retornado pela API inclui o campo `origem` (`local` ou `remoto`).
* O front sempre aciona `/api/documentos/termo-epi` e recebe um PDF. Nao existe mais geracao com `html2pdf.js`.
* A lista de saidas nao possui mais botao de termo; toda a experiencia fica na pagina dedicada.

Como usar
---------
1. Configure o arquivo `.env.local` do frontend. Exemplos:

```
VITE_DATA_MODE=local          # ou "remote" para usar Supabase
VITE_API_URL=http://localhost:3000
```

2. Se quiser rodar o backend em modo local, execute (em um terminal separado):

```
# PowerShell
$env:DATA_MODE='local'; npx vercel dev --listen 3000

# bash
DATA_MODE=local npx vercel dev --listen 3000
```

   Sem esse comando o download dependera do ambiente publicado na Vercel.

3. Rode o frontend normalmente com `npm run dev` e acesse `http://localhost:5173`.

Observacoes
-----------
* Para o modo online basta deixar `DATA_MODE` em branco e usar as credenciais reais do Supabase.
* Os logos e textos do termo ficam em `shared/documents/epiTermTemplate.js`. Ajuste ali e utilize as variaveis `TERMO_EPI_EMPRESA_*` (ou as versoes `VITE_...` para o front).
* `localDataStore` usa o seed de `src/data/local-seed.json`. Se precisar limpar, remova a chave `api-estoque-local-data-v1` do `localStorage`.
