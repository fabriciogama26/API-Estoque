Ambiente de geracao do Termo de EPI
===================================

Visao geral
-----------
Historicamente o projeto dependia de Puppeteer em uma funcao serverless, mas o fluxo atual gera o PDF diretamente no navegador com `html2pdf.js`.

Pontos principais
-----------------
* O backend (funcoes em `api/`) continua disponivel apenas para montar o contexto (`DocumentosOperations.termoEpiContext`). A rota `/api/documentos/termo-epi` agora responde somente JSON.
* A pagina `Termos > Termo de EPI` mostra um badge indicando o modo atual. O JSON retornado pela API inclui o campo `origem` (`local` ou `remoto`).
* O front nao depende mais de Chromium/Puppeteer: o botao "Baixar PDF" usa `html2pdf.js` para baixar o documento com base no HTML exibido.
* A lista de saidas nao possui mais botao de termo; toda a experiencia fica na pagina dedicada (veja `docs/TermosEpi.txt`).

Como usar
---------
1. Configure o arquivo `.env.local` do frontend. Exemplos:

```
VITE_DATA_MODE=local          # ou "remote" para usar Supabase
```

2. Se quiser rodar o backend em modo local, execute (em um terminal separado):

```
# PowerShell
$env:DATA_MODE='local'; npx vercel dev --listen 3000

# bash
DATA_MODE=local npx vercel dev --listen 3000
```

   Sem esse comando o download dependera do ambiente publicado na Vercel para obter o contexto, mas o PDF sera gerado localmente de qualquer forma.

3. Rode o frontend normalmente com `npm run dev` e acesse `http://localhost:5173`.

Observacoes
-----------
* Para o modo online basta deixar `DATA_MODE` em branco e usar as credenciais reais do Supabase.
* Os logos e textos do termo ficam em `shared/documents/epiTermTemplate.js`. Ajuste ali e utilize as variaveis `TERMO_EPI_EMPRESA_*` (ou as versoes `VITE_...` para o front).
* `localDataStore` usa o seed de `src/data/local-seed.json`. Se precisar limpar, remova a chave `api-estoque-local-data-v1` do `localStorage`.
