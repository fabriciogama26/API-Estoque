Tela: Materiais
===============

Objetivo
--------
- Cadastrar e manter EPIs (nome sem numeros, fabricante, validade, CA, valor unitario, estoque minimo, grupo e status).
- Registrar historico de precos para auditoria e garantir chave unica por grupo/material/fabricante/numero especifico.

Fluxo geral
-----------
1. Formulario cria ou atualiza materiais via `dataClient.materiais`.
2. Tabela lista materiais com filtros por termo/campos.
3. Modal de historico (`MateriaisHistoryModal`) mostra variaçao de preco.

Campos principais
-----------------
- `nome`, `fabricante`, `validadeDias`, `ca`, `valorUnitario`, `estoqueMinimo`, `ativo`.
- `grupoMaterial` (obrigatorio, proveniente da API `/api/materiais/groups`).
- `numeroCalcado` (requerido quando o grupo for "Calçado").
- `numeroVestimenta` (requerido quando o grupo for "Vestimenta").
- `numeroEspecifico` (definido automaticamente a partir do grupo/numero informado).
- Valor unitario usa helpers de formatacao (`formatCurrencyInput`).
- Atualizacoes registram usuario responsavel e timestamp.

APIs
----
- `dataClient.materiais.list()`
- `dataClient.materiais.create(payload)`
- `dataClient.materiais.update(id, payload)`
- `dataClient.materiais.priceHistory(id)`
  - Remoto: mapeia para `/api/materiais`, `/api/materiais/:id`, `/api/materiais/price-history/:id`.
  - Local: persiste no `localStorage` e adiciona registros em `materialPriceHistory`.
- `dataClient.materiais.groups()` (consulta os grupos disponiveis; remoto usa `/api/materiais/groups`).

Validacoes
----------
- Frontend garante campos obrigatorios, impede digitos no campo EPI e formata numeros.
- Servicos validam:
  - Nome/fabricante nao vazios e EPI sem numeros.
  - `grupoMaterial` obrigatorio.
  - `numeroCalcado` obrigatorio apenas para grupo "Calçado".
  - `numeroVestimenta` obrigatorio apenas para grupo "Vestimenta".
  - `validadeDias` > 0.
  - `valorUnitario` > 0.
  - `estoqueMinimo` >= 0 (ou null).
  - CA nao vazio (apenas digitos).
  - Chave unica (`grupoMaterial + nome + fabricante + numeroEspecifico`) nao pode se repetir.
- Historico de preco e gravado sempre que `valorUnitario` muda.

Comportamento da UI
-------------------
- `isSaving` desabilita botoes e mostra feedback textual.
- Erros exibem mensagens do `Error.message`.
- Abertura do modal busca cache local antes de nova chamada.
- Edicao preenche formulario com valores formatados.

Dependencias
------------
- `AuthContext` para resolver usuario (nome exibido no historico).
- `MateriaisRules` para sanitizacao/formatacao.
- `dataClient` para alternar entre modo remoto e local.
- Seeds locais fornecem dois materiais de exemplo com historico inicial.
